name: Connect via VPN and Run Workflow

on:
  workflow_dispatch:
  repository_dispatch:
    types: [manual-trigger]
  push:
    branches:
      - main

jobs:
  vpn-job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install OpenVPN
        run: sudo apt-get update && sudo apt-get install -y openvpn

      - name: Create VPN config file
        run: echo "${{ secrets.V_FILE }}" > config.ovpn

      - name: Create VPN auth file
        env:
          VPN_USERNAME: ${{ secrets.VU }}
          VPN_PASSWORD: ${{ secrets.VP }}
        run: |
          echo "$VPN_USERNAME" > auth.txt
          echo "$VPN_PASSWORD" >> auth.txt

      - name: Start VPN Connection
        run: |
          sudo openvpn --config config.ovpn --auth-user-pass auth.txt --daemon
          echo "Waiting 30 seconds for VPN to establish..."
          sleep 30

      - name: Install ODBC Driver 17 for SQL Server (with retry)
        run: |
          set -e
          retry_count=0
          until [ $retry_count -ge 5 ]
          do
            echo "Attempt $(($retry_count+1)) to install ODBC Driver..."
            curl -sSf https://packages.microsoft.com/config/ubuntu/20.04/prod.list -o mssql-release.list && \
            sudo cp mssql-release.list /etc/apt/sources.list.d/ && \
            wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg && \
            sudo cp microsoft.gpg /etc/apt/trusted.gpg.d/ && \
            sudo apt-get update && \
            sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17 unixodbc-dev && break
            retry_count=$((retry_count+1))
            echo "Retry in 10 seconds..."
            sleep 10
          done

      - name: Write SSH key to file
        run: |
          echo "${{ secrets.ROK }}" > rokl.pem
          chmod 600 rokl.pem

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.1'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Python Script
        run: python sqlconn3.py
        env:
          SSH_KEY_PATH: ./rokl.pem
          SSH_KEY: ${{ secrets.ROK }}
          MSH: ${{ secrets.MSH }}
          SSH: ${{ secrets.SSH }}
          SSU: ${{ secrets.SSU }}
          DBH: ${{ secrets.DBH }}
          MSU: ${{ secrets.MSU }}
          MSP: ${{ secrets.MSP }}
          MSN: ${{ secrets.MSN }}
          ASS: ${{ secrets.ASS }}
          ASD: ${{ secrets.ASD }}
          ASU: ${{ secrets.ASU }}
          ASP: ${{ secrets.ASP }}
