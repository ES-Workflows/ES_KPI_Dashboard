name: Connect via VPN and Run Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
  repository_dispatch:
    types: [manual-trigger]

jobs:
  vpn-job:
    runs-on: ubuntu-latest

    steps:
    # STEP 1: Checkout your repo code (this will now be private)
    - name: Checkout code
      uses: actions/checkout@v3

    # STEP 2: Install OpenVPN
    - name: Install OpenVPN
      run: sudo apt-get update && sudo apt-get install -y openvpn

    # STEP 3: Create VPN Config File from GitHub Secret (Secure)
    - name: Create VPN config file from secret
      run: echo "${{ secrets.V_FILE }}" > config.ovpn

    # STEP 4: Create VPN auth.txt from GitHub Secrets
    - name: Create VPN auth.txt
      run: |
        echo "${{ secrets.VU }}" > auth.txt
        echo "${{ secrets.VP }}" >> auth.txt

    # STEP 5: Start VPN Connection
    - name: Start VPN
      run: |
        sudo openvpn --config config.ovpn --auth-user-pass auth.txt --daemon
        sleep 30

    # STEP 6: Install Microsoft ODBC Driver AFTER VPN is up (fixes DNS issue)
    - name: Install ODBC Driver 17 for SQL Server
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17
        sudo apt-get install -y unixodbc-dev

    # STEP 7: Create SSH key from secret
    - name: Create SSH key
      run: |
        echo "${{ secrets.ROK }}" > rokl.pem
        chmod 600 rokl.pem

    # STEP 8: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Use a stable version supported in production

    # STEP 9: Install Python dependencies
    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # STEP 10: Run your main Python data sync script
    - name: Run Data Pipeline Script
      run: python sqlconn3.py
      env:
        SSH_KEY_PATH: ./rokl.pem
        SSH_KEY: ${{ secrets.ROK }}
        MSH: ${{ secrets.MSH }}
        SSH: ${{ secrets.SSH }}
        SSU: ${{ secrets.SSU }}
        DBH: ${{ secrets.DBH }}
        MSU: ${{ secrets.MSU }}
        MSP: ${{ secrets.MSP }}
        MSN: ${{ secrets.MSN }}
        ASS: ${{ secrets.ASS }}
        ASD: ${{ secrets.ASD }}
        ASU: ${{ secrets.ASU }}
        ASP: ${{ secrets.ASP }}


    # STEP 11 (Optional): Clean up sensitive files
    - name: Clean up
      run: rm -f auth.txt config.ovpn rokl.pem
